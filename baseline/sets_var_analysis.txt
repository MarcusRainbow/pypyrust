Function create_set:
    Return: type=HashSet<i64>
    SetComp: type=HashSet<i64>
    Name(i): type=i64
    comprehension: type=<unknown>
    Name(i): type=i64
    Call: type=[i64]
    Name(range): type=<unknown>
    Name(a): type=i64
    Name(b): type=i64

Function set_check_and_add:
    If: type=<unknown>
    Compare: type=bool
    Name(item): type=&str
    In: type=<unknown>
    Name(a): type=HashSet<String>
    Return: type=bool
    Constant: type=bool
    Expr: type=()
    Call: type=()
    Attribute: type=HashSet<String>
    Name(a): type=HashSet<String>
    Load: type=HashSet<String>
    Name(item): type=&str
    Return: type=bool
    Constant: type=bool

Function create_static_set:
    Assign: type=<unknown>
    Name(a): type=HashSet<&str>
    Set: type=HashSet<&str>
    Constant: type=&str
    Constant: type=&str
    Constant: type=&str
    Return: type=HashSet<&str>
    Name(a): type=HashSet<&str>

Function set_methods:
    Assign: type=<unknown>
    Name(s_int): type=HashSet<i64>
    SetComp: type=HashSet<i64>
    Name(x): type=i64
    comprehension: type=<unknown>
    Name(x): type=i64
    Call: type=[i64]
    Name(range): type=<unknown>
    Name(a): type=i64
    Assign: type=<unknown>
    Name(s_str): type=HashSet<String>
    SetComp: type=HashSet<String>
    BinOp: type=String
    Name(b): type=&str
    Mult: type=&str
    Name(x): type=i64
    comprehension: type=<unknown>
    Name(x): type=i64
    Call: type=[i64]
    Name(range): type=<unknown>
    Name(a): type=i64
    Expr: type=()
    Call: type=()
    Attribute: type=HashSet<i64>
    Name(s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Name(a): type=i64
    Expr: type=()
    Call: type=()
    Attribute: type=HashSet<String>
    Name(s_str): type=HashSet<String>
    Load: type=HashSet<String>
    Constant: type=&str
    Assign: type=<unknown>
    Name(copy_s_int): type=HashSet<i64>
    Call: type=HashSet<i64>
    Attribute: type=HashSet<i64>
    Name(s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Assert: type=bool
    Compare: type=bool
    Name(copy_s_int): type=HashSet<i64>
    Eq: type=<unknown>
    Name(s_int): type=HashSet<i64>
    Assert: type=bool
    Compare: type=bool
    Name(copy_s_int): type=HashSet<i64>
    IsNot: type=<unknown>
    Name(s_int): type=HashSet<i64>
    Assign: type=<unknown>
    Name(diff_s_int): type=HashSet<i64>
    Call: type=HashSet<i64>
    Attribute: type=HashSet<i64>
    Name(s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Name(copy_s_int): type=HashSet<i64>
    Assert: type=bool
    Compare: type=bool
    Call: type=i64
    Name(len): type=<unknown>
    Name(diff_s_int): type=HashSet<i64>
    Eq: type=<unknown>
    Constant: type=i64
    Expr: type=()
    Call: type=()
    Attribute: type=HashSet<i64>
    Name(copy_s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Assert: type=bool
    Compare: type=bool
    Name(copy_s_int): type=HashSet<i64>
    NotEq: type=<unknown>
    Name(s_int): type=HashSet<i64>
    Expr: type=()
    Call: type=()
    Attribute: type=HashSet<i64>
    Name(diff_s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Name(s_int): type=HashSet<i64>
    Assert: type=bool
    Compare: type=bool
    Name(diff_s_int): type=HashSet<i64>
    Eq: type=<unknown>
    Name(s_int): type=HashSet<i64>
    Expr: type=()
    Call: type=()
    Attribute: type=HashSet<i64>
    Name(s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Constant: type=i64
    Expr: type=()
    Call: type=()
    Attribute: type=HashSet<String>
    Name(s_str): type=HashSet<String>
    Load: type=HashSet<String>
    Constant: type=&str
    Assign: type=<unknown>
    Name(union_s_int): type=HashSet<i64>
    Call: type=HashSet<i64>
    Attribute: type=HashSet<i64>
    Name(s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Name(copy_s_int): type=HashSet<i64>
    Assert: type=bool
    Compare: type=bool
    Name(copy_s_int): type=HashSet<i64>
    Eq: type=<unknown>
    Name(union_s_int): type=HashSet<i64>
    Assign: type=<unknown>
    Name(inter_s_int): type=HashSet<i64>
    Call: type=HashSet<i64>
    Attribute: type=HashSet<i64>
    Name(s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Name(copy_s_int): type=HashSet<i64>
    Expr: type=()
    Call: type=()
    Attribute: type=HashSet<i64>
    Name(s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Name(copy_s_int): type=HashSet<i64>
    Name(inter_s_int): type=HashSet<i64>
    Assert: type=bool
    Compare: type=bool
    Name(s_int): type=HashSet<i64>
    NotEq: type=<unknown>
    Name(inter_s_int): type=HashSet<i64>
    Assert: type=bool
    UnaryOp: type=bool
    Not: type=bool
    Call: type=bool
    Attribute: type=HashSet<i64>
    Name(s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Name(inter_s_int): type=HashSet<i64>
    Assert: type=bool
    Call: type=bool
    Attribute: type=HashSet<i64>
    Name(inter_s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Name(s_int): type=HashSet<i64>
    Assert: type=bool
    Call: type=bool
    Attribute: type=HashSet<i64>
    Name(s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Name(inter_s_int): type=HashSet<i64>
    Assign: type=<unknown>
    Name(sd_s_int): type=HashSet<i64>
    Call: type=HashSet<i64>
    Attribute: type=HashSet<i64>
    Name(s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Name(copy_s_int): type=HashSet<i64>
    Expr: type=()
    Call: type=()
    Attribute: type=HashSet<i64>
    Name(s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Name(copy_s_int): type=HashSet<i64>
    Name(sd_s_int): type=HashSet<i64>
    Delete: type=&i64
    Subscript: type=&i64
    Name(s_int): type=HashSet<i64>
    Index: type=i64
    Constant: type=i64
    Del: type=<unknown>
    Expr: type=()
    Call: type=()
    Attribute: type=HashSet<i64>
    Name(s_int): type=HashSet<i64>
    Load: type=HashSet<String>
    Constant: type=i64
    Expr: type=()
    Call: type=()
    Attribute: type=HashSet<String>
    Name(s_str): type=HashSet<String>
    Load: type=HashSet<String>
    Constant: type=&str

