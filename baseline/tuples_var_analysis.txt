Function use_tuple_for_swap:
    If: type=<unknown>
    Compare: type=bool
    Name: type=i64
    Load: type=<unknown>
    Gt: type=i64
    Name: type=i64
    Load: type=<unknown>
    Assign: type=<unknown>
    Tuple: type=<unknown>
    Name: type=i64
    Store: type=<unknown>
    Name: type=i64
    Store: type=<unknown>
    Store: type=<unknown>
    Tuple: type=(i64, i64)
    Name: type=i64
    Load: type=<unknown>
    Name: type=i64
    Load: type=<unknown>
    Load: type=<unknown>
    Return: type=i64
    BinOp: type=i64
    Name: type=i64
    Load: type=<unknown>
    Sub: type=i64
    Name: type=i64
    Load: type=<unknown>

Function return_tuple:
    Return: type=(i64, i64)
    Tuple: type=(i64, i64)
    Name: type=i64
    Load: type=<unknown>
    Name: type=i64
    Load: type=<unknown>
    Load: type=<unknown>

Function use_returned_tuple:
    Assign: type=<unknown>
    Tuple: type=<unknown>
    Name: type=i64
    Store: type=<unknown>
    Name: type=i64
    Store: type=<unknown>
    Store: type=<unknown>
    Call: type=(i64, i64)
    Name: type=<unknown>
    Load: type=<unknown>
    Name: type=i64
    Load: type=<unknown>
    Name: type=i64
    Load: type=<unknown>
    Return: type=i64
    Call: type=i64
    Name: type=<unknown>
    Load: type=<unknown>
    Name: type=i64
    Load: type=<unknown>
    Name: type=i64
    Load: type=<unknown>

Function tuple_in_args:
    If: type=<unknown>
    Compare: type=bool
    Subscript: type=i64
    Name: type=(i64, i64)
    Load: type=<unknown>
    Index: type=i64
    Constant: type=i64
    Load: type=<unknown>
    Gt: type=i64
    Subscript: type=i64
    Name: type=(i64, i64)
    Load: type=<unknown>
    Index: type=i64
    Constant: type=i64
    Load: type=<unknown>
    Assign: type=<unknown>
    Name: type=(i64, i64)
    Store: type=<unknown>
    Tuple: type=(i64, i64)
    Subscript: type=i64
    Name: type=(i64, i64)
    Load: type=<unknown>
    Index: type=i64
    Constant: type=i64
    Load: type=<unknown>
    Subscript: type=i64
    Name: type=(i64, i64)
    Load: type=<unknown>
    Index: type=i64
    Constant: type=i64
    Load: type=<unknown>
    Load: type=<unknown>
    Return: type=i64
    BinOp: type=i64
    Subscript: type=i64
    Name: type=(i64, i64)
    Load: type=<unknown>
    Index: type=i64
    Constant: type=i64
    Load: type=<unknown>
    Sub: type=i64
    Subscript: type=i64
    Name: type=(i64, i64)
    Load: type=<unknown>
    Index: type=i64
    Constant: type=i64
    Load: type=<unknown>

