Function use_tuple_for_swap:
    If: type=<unknown>
    Compare: type=bool
    Name(b): type=i64
    Gt: type=<unknown>
    Name(a): type=i64
    Assign: type=<unknown>
    Tuple: type=<unknown>
    Name(a): type=i64
    Name(b): type=i64
    Store: type=<unknown>
    Tuple: type=(i64, i64)
    Name(b): type=i64
    Name(a): type=i64
    Load: type=<unknown>
    Return: type=i64
    BinOp: type=i64
    Name(a): type=i64
    Sub: type=i64
    Name(b): type=i64

Function return_tuple:
    Return: type=(i64, i64)
    Tuple: type=(i64, i64)
    Name(a): type=i64
    Name(b): type=i64
    Load: type=<unknown>

Function use_returned_tuple:
    Assign: type=<unknown>
    Tuple: type=<unknown>
    Name(c): type=i64
    Name(d): type=i64
    Store: type=<unknown>
    Call: type=(i64, i64)
    Name(return_tuple): type=<unknown>
    Name(a): type=i64
    Name(b): type=i64
    Return: type=i64
    Call: type=i64
    Name(use_tuple_for_swap): type=<unknown>
    Name(c): type=i64
    Name(d): type=i64

Function tuple_in_args:
    If: type=<unknown>
    Compare: type=bool
    Subscript: type=i64
    Name(a): type=(i64, i64)
    Index: type=i64
    Constant: type=i64
    Load: type=<unknown>
    Gt: type=<unknown>
    Subscript: type=i64
    Name(a): type=(i64, i64)
    Index: type=i64
    Constant: type=i64
    Load: type=<unknown>
    Assign: type=<unknown>
    Name(a): type=(i64, i64)
    Tuple: type=(i64, i64)
    Subscript: type=i64
    Name(a): type=(i64, i64)
    Index: type=i64
    Constant: type=i64
    Load: type=<unknown>
    Subscript: type=i64
    Name(a): type=(i64, i64)
    Index: type=i64
    Constant: type=i64
    Load: type=<unknown>
    Load: type=<unknown>
    Return: type=i64
    BinOp: type=i64
    Subscript: type=i64
    Name(a): type=(i64, i64)
    Index: type=i64
    Constant: type=i64
    Load: type=<unknown>
    Sub: type=i64
    Subscript: type=i64
    Name(a): type=(i64, i64)
    Index: type=i64
    Constant: type=i64
    Load: type=<unknown>

