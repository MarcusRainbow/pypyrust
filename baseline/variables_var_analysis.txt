Function assignment:
    Assign: type=<unknown>
    Name: type=bool
    Store: type=<unknown>
    Name: type=bool
    Load: type=<unknown>
    Assign: type=<unknown>
    Name: type=String
    Store: type=<unknown>
    Name: type=&str
    Load: type=<unknown>
    Assign: type=<unknown>
    Name: type=i64
    Store: type=<unknown>
    Name: type=i64
    Load: type=<unknown>
    Assign: type=<unknown>
    Name: type=i64
    Store: type=<unknown>
    BinOp: type=i64
    Name: type=i64
    Load: type=<unknown>
    Add: type=i64
    Name: type=i64
    Load: type=<unknown>
    Assign: type=<unknown>
    Name: type=i64
    Store: type=<unknown>
    Name: type=i64
    Store: type=<unknown>
    Name: type=i64
    Store: type=<unknown>
    BinOp: type=i64
    BinOp: type=i64
    BinOp: type=i64
    Name: type=i64
    Load: type=<unknown>
    Add: type=i64
    Name: type=i64
    Load: type=<unknown>
    Add: type=i64
    Name: type=i64
    Load: type=<unknown>
    Add: type=i64
    Name: type=i64
    Load: type=<unknown>
    Return: type=i64
    IfExp: type=i64
    BoolOp: type=bool
    Or: type=i64
    BoolOp: type=bool
    And: type=i64
    Name: type=i64
    Load: type=<unknown>
    Name: type=i64
    Load: type=<unknown>
    Compare: type=bool
    Name: type=Unknown
    Load: type=<unknown>
    Eq: type=Unknown
    Constant: type=Unknown
    BinOp: type=i64
    BinOp: type=i64
    Name: type=i64
    Load: type=<unknown>
    Add: type=i64
    Name: type=i64
    Load: type=<unknown>
    Add: type=i64
    Name: type=i64
    Load: type=<unknown>
    Constant: type=i64

Function annotated_assignment:
    AnnAssign: type=<unknown>
    Name: type=i64
    Store: type=<unknown>
    Name: type=<unknown>
    Load: type=<unknown>
    Constant: type=i64
    AnnAssign: type=<unknown>
    Name: type=bool
    Store: type=<unknown>
    Name: type=<unknown>
    Load: type=<unknown>
    Name: type=bool
    Load: type=<unknown>
    AnnAssign: type=<unknown>
    Name: type=String
    Store: type=<unknown>
    Name: type=<unknown>
    Load: type=<unknown>
    Name: type=&str
    Load: type=<unknown>
    AnnAssign: type=<unknown>
    Name: type=i64
    Store: type=<unknown>
    Name: type=<unknown>
    Load: type=<unknown>
    BinOp: type=i64
    Name: type=i64
    Load: type=<unknown>
    Add: type=i64
    Name: type=i64
    Load: type=<unknown>
    Return: type=i64
    IfExp: type=i64
    BoolOp: type=bool
    And: type=i64
    Name: type=i64
    Load: type=<unknown>
    Name: type=i64
    Load: type=<unknown>
    Compare: type=bool
    Name: type=Unknown
    Load: type=<unknown>
    Eq: type=Unknown
    Constant: type=Unknown
    BinOp: type=i64
    Name: type=i64
    Load: type=<unknown>
    Add: type=i64
    Name: type=i64
    Load: type=<unknown>
    Constant: type=i64

Function aug_assign:
    Assign: type=<unknown>
    Name: type=i64
    Store: type=<unknown>
    Constant: type=i64
    AugAssign: type=<unknown>
    Name: type=
    Store: type=<unknown>
    Add: type=i64
    Name: type=i64
    Load: type=<unknown>
    AugAssign: type=<unknown>
    Name: type=
    Store: type=<unknown>
    Sub: type=<unknown>
    Name: type=i64
    Load: type=<unknown>
    AugAssign: type=<unknown>
    Name: type=
    Store: type=<unknown>
    Div: type=<unknown>
    BinOp: type=i64
    Name: type=i64
    Load: type=<unknown>
    Add: type=i64
    Name: type=i64
    Load: type=<unknown>
    AugAssign: type=<unknown>
    Name: type=
    Store: type=<unknown>
    FloorDiv: type=<unknown>
    Name: type=i64
    Load: type=<unknown>
    AugAssign: type=<unknown>
    Name: type=
    Store: type=<unknown>
    Mult: type=<unknown>
    Name: type=i64
    Load: type=<unknown>
    Return: type=i64
    Name: type=i64
    Load: type=<unknown>

Function repeated_assign:
    Assign: type=<unknown>
    Name: type=String
    Store: type=<unknown>
    Name: type=&str
    Load: type=<unknown>
    If: type=<unknown>
    Compare: type=bool
    Name: type=&str
    Load: type=<unknown>
    NotEq: type=&str
    Name: type=&str
    Load: type=<unknown>
    Assign: type=<unknown>
    Name: type=String
    Store: type=<unknown>
    Name: type=&str
    Load: type=<unknown>
    If: type=<unknown>
    Compare: type=bool
    Name: type=&str
    Load: type=<unknown>
    Eq: type=&str
    Name: type=&str
    Load: type=<unknown>
    Assign: type=<unknown>
    Name: type=String
    Store: type=<unknown>
    Constant: type=&str
    Return: type=Unknown
    Name: type=Unknown
    Load: type=<unknown>

Function pathological:
    If: type=<unknown>
    Name: type=bool
    Load: type=<unknown>
    Assign: type=<unknown>
    Name: type=String
    Store: type=<unknown>
    Name: type=&str
    Load: type=<unknown>
    Assign: type=<unknown>
    Name: type=String
    Store: type=<unknown>
    Name: type=&str
    Load: type=<unknown>
    Return: type=Unknown
    Name: type=Unknown
    Load: type=<unknown>

